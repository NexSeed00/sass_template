
$bgColor:grey;

header{
    height: 100px;
    width: 100%;
    background-color:beige;
}

main{
    background-color:$bgColor;
    padding: 20px;

    div{
        display: flex;
        justify-content: space-around;
    }

    .tittle{
        font-size: 100px;
        font-weight: bold;
        font-family: cursive;
        text-align: center;
    }


    .btn-design{
        color:navy;
        background-color: beige;  
        border-color: beige;
        height: 100px;
        font-family: cursive;
        font-size: 50px;
        font-weight: bold;
    }    


}



// // menuにアニメーションつける
// @mixin animationValue( $name, $duration, $function, $delay, $count, $state){
//     -webkit-animation: $name $duration+s $function $delay+s $count $state;
//     animation: $name $duration+s $function $delay+s $count $state;
// }

// // ↓through の後の数字を子要素の数字にすることで
// // ↓{}（ブレース）内の処理をその回数分繰り返します。
// @for $cnt from 1 through 3{
//     // ↓nth-child の中の数字を #{$cnt} として現在の繰り返しているカウント数にします
//     .menu:nth-child(#{$cnt}){
//         // ↓ include で animation プロパティを定義した mixin を呼び出す。
//         // ↓現在のカウント数（$cnt）に少数値をかけた値を $delay 
//         // ↓に指定することで時間差をつけることができる
//         @include animationValue(example, 0.5, ease, $cnt * 0.5 , 1, forwards);
//     }
// } 





menu{
        display: flex;
        justify-content: space-around;
        background-color: black;
        padding: 20px;
    
    

    .menu{
    height: 200px;
    width: 200px;
    background-color: $bgColor;
    border-radius: 50%;
    text-align: center;
        p{
            font-size: 40px;
            font-weight: bold;
            font-family: cursive;
            margin-top: 30px;
        }
    
    }

  
   

  .menu:hover{
        opacity: 0.5;
    }

    
    
}

.result{
    display: none;
}




